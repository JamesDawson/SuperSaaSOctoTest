step "Provision Back-End" {

    action {
        action_type = "Octopus.AzurePowerShell"
        notes = "Deploys back-end infrastructure"
        properties = {
            Octopus.Action.Azure.AccountId = "supersaas-octotest-sp"
            Octopus.Action.RunOnServer = "true"
            Octopus.Action.Script.ScriptBody = "Write-Host \"Provisioning Infrastructure\""
            Octopus.Action.Script.ScriptSource = "Inline"
            Octopus.Action.Script.Syntax = "PowerShell"
            OctopusUseBundledTooling = "False"
        }
        worker_pool = "Hosted Ubuntu"

        container {
            feed = "DockerHub"
            image = "endjin/Corvus.Deployment:0.3.17"
        }
    }
}

step "Run a Script" {

    action {
        action_type = "Octopus.Script"
        properties = {
            Octopus.Action.RunOnServer = "true"
            Octopus.Action.Script.ScriptBody = "write-host \"hello script\""
            Octopus.Action.Script.ScriptSource = "Inline"
            Octopus.Action.Script.Syntax = "PowerShell"
        }
        worker_pool = "Hosted Ubuntu"
    }
}

step "Deploy an Azure Web App (Web Deploy)" {
    properties = {
        Octopus.Action.TargetRoles = "ui"
    }

    action {
        action_type = "Octopus.AzureWebApp"
        properties = {
            Octopus.Action.Azure.UseChecksum = "False"
            Octopus.Action.Package.DownloadOnTentacle = "False"
            Octopus.Action.Package.FeedId = "github-public"
            Octopus.Action.Package.PackageId = "corvus-dotnet/Corvus.Deployment"
            Octopus.Action.RunOnServer = "true"
            OctopusUseBundledTooling = "False"
        }
        worker_pool = "Hosted Ubuntu"

        packages {
            acquisition_location = "Server"
            feed = "github-public"
            package_id = "corvus-dotnet/Corvus.Deployment"
            properties = {
                SelectionMode = "immediate"
            }
        }
    }
}